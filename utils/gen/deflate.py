# generate deflate rfc-1951 fixed huffman tree
import sys

ranges = [
    list(range(256, 280)),
    list(range(0, 144)),
    list(range(280, 288)),
    list(range(144, 256))
]

ns = [sum(len(ranges[i]) for i in range(n)) for n in range(1, len(ranges) + 1)]

positions = [
    *[0 for _ in range(6)],
    ns[0],
    ns[2],
    ns[3]
]

symbols = []
for r in ranges:
    symbols += r

fmt_array = lambda xs: "{" + ",".join([f"0x{x:x}" for x in xs]) + "};"
def_array = lambda n, xs: print(f"uint16_t {n}[]=" + fmt_array(xs))

print(f"/* generated by utils/gen/{sys.argv[0].split('/')[-1]} */")
print("#include<stdint.h>")
def_array('__fhf_lit_symbols', symbols)
def_array('__fhf_lit_positions', positions)
def_array('__fhf_dist_symbols', list(range(0, 32)))
def_array('__fhf_dist_positions', [0 for _ in range(4)])
